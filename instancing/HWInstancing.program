//---------------------------------------------------------------------------
//These materials/shaders are part of the NEW InstanceManager implementation
//Written by Matias N. Goldberg ("dark_sylinc")
//---------------------------------------------------------------------------

//--------------------------------------------------------------
// GLSL Programs
//--------------------------------------------------------------
vertex_program Ogre/Instancing/HWBasic_glsl_vs glsl
{
	source HWBasicInstancing.vert

	preprocessor_defines DEPTH_SHADOWRECEIVER=1
}

vertex_program Ogre/Instancing/HWBasic/shadow_caster_glsl_vs glsl
{
	source HWBasicInstancing.vert

	preprocessor_defines DEPTH_SHADOWCASTER=1
}

//--------------------------------------------------------------
// hlsl Programs
//--------------------------------------------------------------
vertex_program Ogre/Instancing/HWBasic_hlsl_vs hlsl
{
	source HWBasicInstancing.hlsl
	entry_point main_vs
	target vs_4_0 vs_4_0_level_9_1 vs_4_0_level_9_3
	
	preprocessor_defines DEPTH_SHADOWRECEIVER
}

vertex_program Ogre/Instancing/HWBasic/shadow_caster_hlsl_vs hlsl
{
	source HWBasicInstancing.hlsl
	entry_point main_vs
	target vs_4_0 vs_4_0_level_9_1 vs_4_0_level_9_3
	
	preprocessor_defines DEPTH_SHADOWCASTER
}

//--------------------------------------------------------------
// GLSL ES Programs
//--------------------------------------------------------------
vertex_program Ogre/Instancing/HWBasic_glsles_vs glsles
{
	source HWBasicInstancing.vert

	preprocessor_defines DEPTH_SHADOWRECEIVER=1
}

vertex_program Ogre/Instancing/HWBasic/shadow_caster_glsles_vs glsles
{
	source HWBasicInstancing.vert

	preprocessor_defines DEPTH_SHADOWCASTER=1
}

//--------------------------------------------------------------
// CG Programs
//--------------------------------------------------------------
vertex_program Ogre/Instancing/HWBasic_cg_vs cg
{
	source HWBasicInstancing.cg
	entry_point main_vs
	profiles  vs_3_0 vp40
	
	compile_arguments -DDEPTH_SHADOWRECEIVER
}

vertex_program Ogre/Instancing/HWBasic/shadow_caster_cg_vs cg
{
	source HWBasicInstancing.cg
	entry_point main_vs
	profiles  vs_3_0 vp40
	
	compile_arguments -DDEPTH_SHADOWCASTER
}

//--------------------------------------------------------------
// Unified CG/GLSL Programs
//--------------------------------------------------------------
vertex_program Ogre/Instancing/HWBasic_vs unified
{
	delegate Ogre/Instancing/HWBasic_glsl_vs
	delegate Ogre/Instancing/HWBasic_glsles_vs
	delegate Ogre/Instancing/HWBasic_hlsl_vs
	delegate Ogre/Instancing/HWBasic_cg_vs

	default_params
	{
		param_named_auto	viewProjMatrix				viewproj_matrix

		param_named_auto	depthRange					shadow_scene_depth_range 0
		param_named_auto	texViewProjMatrix			texture_viewproj_matrix 0
	}
}

vertex_program Ogre/Instancing/HWBasic/shadow_caster_vs unified
{
	delegate Ogre/Instancing/HWBasic/shadow_caster_glsl_vs
	delegate Ogre/Instancing/HWBasic/shadow_caster_glsles_vs
	delegate Ogre/Instancing/HWBasic/shadow_caster_hlsl_vs
	delegate Ogre/Instancing/HWBasic/shadow_caster_cg_vs

	default_params
	{
		param_named_auto	viewProjMatrix				viewproj_matrix
		param_named_auto	depthRange					scene_depth_range
	}
}

