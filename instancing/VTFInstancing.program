//---------------------------------------------------------------------------
//These materials/shaders are part of the NEW InstanceManager implementation
//Written by Matias N. Goldberg ("dark_sylinc")
//---------------------------------------------------------------------------

//--------------------------------------------------------------
// GLSL Programs
//--------------------------------------------------------------
vertex_program Ogre/Instancing/VTF_glsl_vs glsl
{
	source VTFInstancing.vert

	preprocessor_defines DEPTH_SHADOWRECEIVER=1

	uses_vertex_texture_fetch true

	default_params
	{
		param_named			matrixTexture				int 2
	}
}

vertex_program Ogre/Instancing/VTF/shadow_caster_glsl_vs glsl
{
	source VTFInstancing.vert

	preprocessor_defines DEPTH_SHADOWCASTER=1

	uses_vertex_texture_fetch true

	default_params
	{
		param_named			matrixTexture				int 0
	}
}

vertex_program Ogre/Instancing/VTF_dq_glsl_vs glsl
{
	source VTFInstancing.vert

	preprocessor_defines ST_DUAL_QUATERNION,DEPTH_SHADOWRECEIVER=1

	uses_vertex_texture_fetch true

	default_params
	{
		param_named			matrixTexture				int 2
	}
}

vertex_program Ogre/Instancing/VTF/shadow_caster_dq_glsl_vs glsl
{
	source VTFInstancing.vert

	preprocessor_defines ST_DUAL_QUATERNION,DEPTH_SHADOWCASTER=1

	uses_vertex_texture_fetch true

	default_params
	{
		param_named			matrixTexture				int 0
	}
}

vertex_program Ogre/Instancing/VTF_dq_two_weights_glsl_vs glsl
{
	source VTFInstancing.vert

	preprocessor_defines ST_DUAL_QUATERNION,BONE_TWO_WEIGHTS,DEPTH_SHADOWRECEIVER=1

	uses_vertex_texture_fetch true

	default_params
	{
		param_named			matrixTexture				int 2
	}
}

vertex_program Ogre/Instancing/VTF/shadow_caster_dq_two_weights_glsl_vs glsl
{
	source VTFInstancing.vert

	preprocessor_defines ST_DUAL_QUATERNION,BONE_TWO_WEIGHTS,DEPTH_SHADOWCASTER=1

	uses_vertex_texture_fetch true

	default_params
	{
		param_named			matrixTexture				int 0
	}
}

//--------------------------------------------------------------
// hlsl Programs
//--------------------------------------------------------------
vertex_program Ogre/Instancing/VTF_hlsl_vs hlsl
{
	source VTFInstancing.hlsl
	entry_point main_vs
	target vs_4_0 vs_4_0_level_9_1 vs_4_0_level_9_3
	
	preprocessor_defines DEPTH_SHADOWRECEIVER

	uses_vertex_texture_fetch true
}

vertex_program Ogre/Instancing/VTF/shadow_caster_hlsl_vs hlsl
{
	source VTFInstancing.hlsl
	entry_point main_vs
	target vs_4_0 vs_4_0_level_9_1 vs_4_0_level_9_3
	
	preprocessor_defines DEPTH_SHADOWCASTER

	uses_vertex_texture_fetch true
}

vertex_program Ogre/Instancing/VTF_dq_hlsl_vs hlsl
{
	source VTFInstancing.hlsl
	entry_point main_vs
	target vs_4_0 vs_4_0_level_9_1 vs_4_0_level_9_3
	
	preprocessor_defines DEPTH_SHADOWRECEIVER,ST_DUAL_QUATERNION

	uses_vertex_texture_fetch true
}

vertex_program Ogre/Instancing/VTF/shadow_caster_dq_hlsl_vs hlsl
{
	source VTFInstancing.hlsl
	entry_point main_vs
	target vs_4_0 vs_4_0_level_9_1 vs_4_0_level_9_3
	
	preprocessor_defines DEPTH_SHADOWCASTER,ST_DUAL_QUATERNION

	uses_vertex_texture_fetch true
}

vertex_program Ogre/Instancing/VTF_dq_two_weights_hlsl_vs hlsl
{
	source VTFInstancing.hlsl
	entry_point main_vs
	target vs_4_0 vs_4_0_level_9_1 vs_4_0_level_9_3
	
	preprocessor_defines DEPTH_SHADOWRECEIVER,ST_DUAL_QUATERNION,BONE_TWO_WEIGHTS

	uses_vertex_texture_fetch true
}

vertex_program Ogre/Instancing/VTF/shadow_caster_dq_two_weights_hlsl_vs hlsl
{
	source VTFInstancing.hlsl
	entry_point main_vs
	target vs_4_0 vs_4_0_level_9_1 vs_4_0_level_9_3
	
	preprocessor_defines DEPTH_SHADOWCASTER,ST_DUAL_QUATERNION,BONE_TWO_WEIGHTS

	uses_vertex_texture_fetch true
}

//--------------------------------------------------------------
// GLSL ES Programs
//--------------------------------------------------------------
vertex_program Ogre/Instancing/VTF_glsles_vs glsles
{
	source VTFInstancing.vert

	preprocessor_defines DEPTH_SHADOWRECEIVER=1

	uses_vertex_texture_fetch true

	default_params
	{
		param_named			matrixTexture				int 2
	}
}

vertex_program Ogre/Instancing/VTF/shadow_caster_glsles_vs glsles
{
	source VTFInstancing.vert

	preprocessor_defines DEPTH_SHADOWCASTER=1

	uses_vertex_texture_fetch true

	default_params
	{
		param_named			matrixTexture				int 0
	}
}

vertex_program Ogre/Instancing/VTF_dq_glsles_vs glsles
{
	source VTFInstancing.vert

	preprocessor_defines ST_DUAL_QUATERNION,DEPTH_SHADOWRECEIVER=1

	uses_vertex_texture_fetch true

	default_params
	{
		param_named			matrixTexture				int 2
	}
}

vertex_program Ogre/Instancing/VTF/shadow_caster_dq_glsles_vs glsles
{
	source VTFInstancing.vert

	preprocessor_defines ST_DUAL_QUATERNION,DEPTH_SHADOWCASTER=1

	uses_vertex_texture_fetch true

	default_params
	{
		param_named			matrixTexture				int 0
	}
}

vertex_program Ogre/Instancing/VTF_dq_two_weights_glsles_vs glsles
{
	source VTFInstancing.vert

	preprocessor_defines ST_DUAL_QUATERNION,BONE_TWO_WEIGHTS,DEPTH_SHADOWRECEIVER=1

	uses_vertex_texture_fetch true

	default_params
	{
		param_named			matrixTexture				int 2
	}
}

vertex_program Ogre/Instancing/VTF/shadow_caster_dq_two_weights_glsles_vs glsles
{
	source VTFInstancing.vert

	preprocessor_defines ST_DUAL_QUATERNION,BONE_TWO_WEIGHTS,DEPTH_SHADOWCASTER=1

	uses_vertex_texture_fetch true

	default_params
	{
		param_named			matrixTexture				int 0
	}
}

//--------------------------------------------------------------
// CG Programs
//--------------------------------------------------------------
vertex_program Ogre/Instancing/VTF_cg_vs cg
{
	source VTFInstancing.cg
	entry_point main_vs
	profiles  vs_3_0 vp40
	
	compile_arguments -DDEPTH_SHADOWRECEIVER

	uses_vertex_texture_fetch true
}

vertex_program Ogre/Instancing/VTF/shadow_caster_cg_vs cg
{
	source VTFInstancing.cg
	entry_point main_vs
	profiles  vs_3_0 vp40
	
	compile_arguments -DDEPTH_SHADOWCASTER

	uses_vertex_texture_fetch true
}

vertex_program Ogre/Instancing/VTF_dq_cg_vs cg
{
	source VTFInstancing.cg
	entry_point main_vs
	profiles  vs_3_0 vp40
	
	compile_arguments -DDEPTH_SHADOWRECEIVER -DST_DUAL_QUATERNION

	uses_vertex_texture_fetch true
}

vertex_program Ogre/Instancing/VTF/shadow_caster_dq_cg_vs cg
{
	source VTFInstancing.cg
	entry_point main_vs
	profiles  vs_3_0 vp40
	
	compile_arguments -DDEPTH_SHADOWCASTER -DST_DUAL_QUATERNION

	uses_vertex_texture_fetch true
}

vertex_program Ogre/Instancing/VTF_dq_two_weights_cg_vs cg
{
	source VTFInstancing.cg
	entry_point main_vs
	profiles  vs_3_0 vp40
	
	compile_arguments -DDEPTH_SHADOWRECEIVER -DST_DUAL_QUATERNION -DBONE_TWO_WEIGHTS

	uses_vertex_texture_fetch true
}

vertex_program Ogre/Instancing/VTF/shadow_caster_dq_two_weights_cg_vs cg
{
	source VTFInstancing.cg
	entry_point main_vs
	profiles  vs_3_0 vp40
	
	compile_arguments -DDEPTH_SHADOWCASTER -DST_DUAL_QUATERNION -DBONE_TWO_WEIGHTS

	uses_vertex_texture_fetch true
}

//--------------------------------------------------------------
// Unified CG/GLSL Programs
//--------------------------------------------------------------
vertex_program Ogre/Instancing/VTF_vs unified
{
	delegate Ogre/Instancing/VTF_glsl_vs
	delegate Ogre/Instancing/VTF_glsles_vs
	delegate Ogre/Instancing/VTF_hlsl_vs
	delegate Ogre/Instancing/VTF_cg_vs

	default_params
	{
		param_named_auto	viewProjMatrix				viewproj_matrix

		param_named_auto	depthRange					shadow_scene_depth_range 0
		param_named_auto	texViewProjMatrix			texture_viewproj_matrix 0
	}
}

vertex_program Ogre/Instancing/VTF/shadow_caster_vs unified
{
	delegate Ogre/Instancing/VTF/shadow_caster_glsl_vs
	delegate Ogre/Instancing/VTF/shadow_caster_glsles_vs
	delegate Ogre/Instancing/VTF/shadow_caster_hlsl_vs
	delegate Ogre/Instancing/VTF/shadow_caster_cg_vs

	default_params
	{
		param_named_auto	viewProjMatrix				viewproj_matrix
		param_named_auto	depthRange					scene_depth_range
	}
}

vertex_program Ogre/Instancing/VTF_dq_vs unified
{
	delegate Ogre/Instancing/VTF_dq_glsl_vs
	delegate Ogre/Instancing/VTF_dq_glsles_vs
	delegate Ogre/Instancing/VTF_dq_hlsl_vs
	delegate Ogre/Instancing/VTF_dq_cg_vs

	default_params
	{
		param_named_auto	viewProjMatrix				viewproj_matrix

		param_named_auto	depthRange				shadow_scene_depth_range 0
		param_named_auto	texViewProjMatrix			texture_viewproj_matrix 0
	}
}

vertex_program Ogre/Instancing/VTF/shadow_caster_dq_vs unified
{
	delegate Ogre/Instancing/VTF/shadow_caster_dq_glsl_vs
	delegate Ogre/Instancing/VTF/shadow_caster_dq_glsles_vs
	delegate Ogre/Instancing/VTF/shadow_caster_dq_hlsl_vs
	delegate Ogre/Instancing/VTF/shadow_caster_dq_cg_vs

	default_params
	{
		param_named_auto	viewProjMatrix				viewproj_matrix
		param_named_auto	depthRange				scene_depth_range
	}
}

vertex_program Ogre/Instancing/VTF_dq_two_weights_vs unified
{
	delegate Ogre/Instancing/VTF_dq_two_weights_glsl_vs
	delegate Ogre/Instancing/VTF_dq_two_weights_glsles_vs
	delegate Ogre/Instancing/VTF_dq_two_weights_hlsl_vs
	delegate Ogre/Instancing/VTF_dq_two_weights_cg_vs

	default_params
	{
		param_named_auto	viewProjMatrix				viewproj_matrix

		param_named_auto	depthRange				shadow_scene_depth_range 0
		param_named_auto	texViewProjMatrix			texture_viewproj_matrix 0
	}
}

vertex_program Ogre/Instancing/VTF/shadow_caster_dq_two_weights_vs unified
{
	delegate Ogre/Instancing/VTF/shadow_caster_dq_two_weights_glsl_vs
	delegate Ogre/Instancing/VTF/shadow_caster_dq_two_weights_glsles_vs
	delegate Ogre/Instancing/VTF/shadow_caster_dq_two_weights_hlsl_vs
	delegate Ogre/Instancing/VTF/shadow_caster_dq_two_weights_cg_vs

	default_params
	{
		param_named_auto	viewProjMatrix				viewproj_matrix
		param_named_auto	depthRange				scene_depth_range
	}
}
